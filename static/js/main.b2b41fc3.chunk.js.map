{"version":3,"sources":["components/contact/contact.jsx","components/core/navigation.jsx","img/CV.pdf","components/landing/eyes.jsx","components/landing/landing.jsx","components/skills/skillsList.js","components/skills/skills.jsx","img/memory_game.png","img/missing_trees.png","img/crypto_signals.jpg","img/lucky_guess.png","img/asana.png","img/dashboard.png","components/projects/projectData.js","img/johnny.gif","img/memory_game1.png","img/memory_game2.png","img/memory_game3.png","img/missing_trees1.png","img/missing_trees2.png","img/missing_trees3.png","img/crypto_signals1.jpg","img/lucky_guess1.png","img/lucky_guess2.png","img/lucky_guess3.png","img/asana1.png","img/asana2.png","img/dashboard1.png","img/dashboard2.png","img/dashboard3.png","components/projects/projectModals/projectModals.jsx","components/projects/portfolio.jsx","components/core/backgroundParticles.jsx","App.js","reportWebVitals.js","index.js"],"names":["ContactModal","visible","modalVisibility","handleClose","footer","className","onClick","title","onCancel","width","onSubmit","e","preventDefault","emailjs","sendForm","target","then","result","console","log","text","error","reset","class","for","id","type","placeholder","name","required","Navigation","useState","showModal","setShowModal","href","vis","Eyes","angleLeftEye","useMightyMouse","x","y","selectedElement","position","angle","angleRightEye","rotateLeftEye","rotateRightEye","style","transform","Landing","spin","setSpin","useEffect","notification","info","message","description","placement","icon","SmileOutlined","duration","CV","rel","window","scrollTo","top","behavior","projectManagment","rate","tools","score","skills","Skills","map","skill","strokeColor","showInfo","percent","tool","projectManager","disabled","allowHalf","defaultValue","projects","subtitle","image","memoryGame","link","modal","missingTree","luckyGuess","cryptoSignals","asana","dashboard","ProjectModals","modalSelect","handleOk","handleCancel","onOk","autoplay","src","alt","memoryGame1","memoryGame2","memoryGame3","missingTree1","missingTree2","missingTree3","luckyGuess1","luckyGuess2","luckyGuess3","color","cryptoSignals1","asana1","asana2","dashboard1","dashboard2","dashboard3","Portfolio","scrollPosition","setPosition","showJohn","setShowJohn","showContactButton","setShowContactButton","showContactModal","setShowContactModal","selectedModal","setSelectedShowModal","useLayoutEffect","updatePosition","pageYOffset","addEventListener","removeEventListener","timer","setTimeout","clearTimeout","project","handleModal","johnny","ParticlesWithProps","init","main","loaded","container","options","background","value","fpsLimit","interactivity","events","onHover","enable","mode","resize","modes","bubble","distance","opacity","size","push","quantity","repulse","particles","links","move","number","density","value_area","shape","random","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b2b41fc3.chunk.js","sourcesContent":["import React from \"react\";\n\nimport { Modal } from \"antd\";\n\nimport emailjs from \"emailjs-com\";\n\nimport \"./contact.scss\";\n\nconst SERVICE_ID = \"service_l9g9w4r\";\nconst TEMPLATE_ID = \"template_ma99cvh\";\nconst USER_ID = \"user_m5Vson4J5gLmUS3dmpu8i\";\n\nconst ContactModal = ({ visible, modalVisibility }) => {\n  const sendEmail = (e) => {\n    e.preventDefault();\n    emailjs.sendForm(SERVICE_ID, TEMPLATE_ID, e.target, USER_ID).then(\n      (result) => {\n        console.log(result.text);\n      },\n      (error) => {\n        console.log(error.text);\n      }\n    );\n    e.target.reset();\n\n    modalVisibility(false);\n  };\n\n  const handleClose = () => {\n    modalVisibility(false);\n  };\n\n  const footer = [\n    <button\n      className=\"text-white w-1/8 bg-white-200 py-2  px-6 m-1 focus:outline-none hover:bg-green-600 hover:border-green-600 border-2 border-green-500 rounded text-lg\"\n      onClick={handleClose}\n    >\n      Close\n    </button>,\n  ];\n\n  const width = \"30%\";\n\n  return (\n    <Modal\n      visible={visible}\n      title=\"Contact Me\"\n      onCancel={handleClose}\n      footer={footer}\n      width={width}\n    >\n      <form onSubmit={sendEmail} className=\"w-full max-w-lg\">\n        <div class=\"flex flex-wrap -mx-3 mb-6\">\n          <div class=\"w-full md:w-1/2 px-3 mb-6 md:mb-0\">\n            <label\n              class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n              for=\"grid-name\"\n            >\n              Name\n            </label>\n            <input\n              class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-red-500 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white\"\n              id=\"grid-name\"\n              type=\"text\"\n              placeholder=\"Name\"\n              name=\"name\"\n              required\n            />\n          </div>\n          <div class=\"w-full md:w-1/2 px-3\">\n            <label\n              class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n              for=\"grid-company\"\n            >\n              Company\n            </label>\n            <input\n              class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n              id=\"grid-company\"\n              type=\"text\"\n              placeholder=\"Company\"\n              name=\"company\"\n            />\n          </div>\n        </div>\n        <div class=\"flex flex-wrap -mx-3 mb-6\">\n          <div class=\"w-full px-3\">\n            <label\n              class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n              for=\"grid-email\"\n            >\n              Email\n            </label>\n            <input\n              class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n              id=\"grid-email\"\n              type=\"email\"\n              placeholder=\"email@company.com\"\n              name=\"email\"\n              required\n            />\n          </div>\n        </div>\n        <div class=\"flex flex-wrap -mx-3 mb-6\">\n          <div class=\"w-full px-3\">\n            <label\n              class=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\"\n              for=\"grid-message\"\n            >\n              Message\n            </label>\n            <textarea\n              class=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n              id=\"grid-message\"\n              placeholder=\"Your message...\"\n              name=\"message\"\n            />\n          </div>\n        </div>\n        <div class=\"md:flex md:items-center\">\n          <div class=\"md:w-1/3\"></div>\n          <div class=\"md:w-2/3\">\n            <button\n              class=\"text-white w-1/2 bg-green-800 border-0 py-2 p-8 px-6 focus:outline-none hover:bg-green-600 rounded text-lg\"\n              type=\"submit\"\n            >\n              Send\n            </button>\n          </div>\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\nexport default ContactModal;\n","import React, { useState } from \"react\";\n\nimport ContactModal from \"../contact/contact\";\n\nconst Navigation = () => {\n  const [showModal, setShowModal] = useState(false);\n\n  const modalVisibility = (vis) => {\n    setShowModal(vis);\n  };\n  return (\n    <header className=\"bg-gray-800 md:sticky top-0 z-10\">\n      <div className=\"container mx-auto flex flex-wrap p-5 flex-col md:flex-row items-center\">\n        <a\n          className=\"title-font font-medium text-white mb-4 md:mb-0\"\n          href=\"#landing\"\n        >\n          <p href=\"#landing\" className=\"ml-3 text-xl\">\n            Peter Willmott\n          </p>\n        </a>\n        <nav className=\"md:mr-auto md:ml-4 md:py-1 md:pl-4 md:border-l md:border-gray-700\tflex flex-wrap items-center text-base justify-center\">\n          <a href=\"#projects\" className=\"mr-5 hover:text-white\">\n            Projects\n          </a>\n          <a href=\"#skills\" className=\"mr-5 hover:text-white\">\n            Skills\n          </a>\n        </nav>\n        <button\n          className=\"inline-flex items-center bg-gray-800 border-0 py-1 px-3 focus:outline-none hover:bg-gray-700 rounded text-base mt-4 md:mt-0\"\n          onClick={() => setShowModal(true)}\n        >\n          Contact Me\n        </button>\n        <ContactModal visible={showModal} modalVisibility={modalVisibility} />\n      </div>\n    </header>\n  );\n};\n\nexport default Navigation;\n","export default __webpack_public_path__ + \"static/media/CV.6ad1d0d7.pdf\";","import React from \"react\";\n\nimport useMightyMouse from \"react-hook-mighty-mouse\";\nimport \"./eyes.scss\";\n\nconst Eyes = () => {\n  const {\n    selectedElement: {\n      position: { angle: angleLeftEye },\n    },\n  } = useMightyMouse(true, \"left-eye\", { x: 20, y: 20 });\n  const {\n    selectedElement: {\n      position: { angle: angleRightEye },\n    },\n  } = useMightyMouse(true, \"right-eye\", { x: 20, y: 20 });\n\n  const rotateLeftEye = `rotate(${-angleLeftEye}deg)`;\n  const rotateRightEye = `rotate(${-angleRightEye}deg)`;\n\n  return (\n    <div className=\"eyes-follow\">\n      <div className=\"eyes\">\n        <div id=\"left-eye\" className=\"eye\" style={{ transform: rotateLeftEye }}>\n          <div className=\"pupil\" />\n        </div>\n        <div\n          id=\"right-eye\"\n          className=\"eye eye-right\"\n          style={{ transform: rotateRightEye }}\n        >\n          <div className=\"pupil\" />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Eyes;\n","import React, { useState, useEffect } from \"react\";\n\nimport { notification } from \"antd\";\nimport { SmileOutlined } from \"@ant-design/icons\";\nimport { ChevronDoubleUpIcon } from \"@heroicons/react/solid\";\n\nimport CV from \"../../img/CV.pdf\";\n\nimport Eyes from \"./eyes\";\n\nimport \"./landing.scss\";\n\nconst Landing = () => {\n  const [spin, setSpin] = useState(true);\n\n  const stopSpin = () => {\n    setSpin(false);\n  };\n\n  const startSpin = () => {\n    setSpin(true);\n  };\n\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\",\n    });\n  };\n\n  const openNotification = () => {\n    notification.info({\n      message: \"Hello!\",\n      description:\n        \"I enjoyed making this and just had fun with the design. This is just a disclaimer that although this is informal, I understand the professionalism and optimisation needed within the work environment. Have a great day! \",\n      placement: \"bottomLeft\",\n      icon: <SmileOutlined className=\"text-green-600\" />,\n      duration: 10,\n      className: \"w-1/2\",\n    });\n  };\n\n  useEffect(() => {\n    openNotification();\n  }, []);\n\n  return (\n    <section id=\"landing\">\n      <div className=\"container mx-auto flex px-10 py-20 md:flex-row flex-col items-center\">\n        <div className=\"lg:flex-grow md:w-1/2 lg:pr-24 md:pr-16 flex flex-col md:items-start md:text-left mb-16 md:mb-0 items-center text-center z-0\">\n          <h1 className=\"title-font sm:text-4xl text-3xl mb-4 font-medium text-white\">\n            Hi, I'm Peter\n            <br />\n            <br className=\"hidden lg:inline-block\" />a passionate Software\n            Engineer!\n          </h1>\n          <p className=\"mb-8 leading-relaxed\">\n            With a background in data science and a passion for programming I am\n            always looking to improve my skills.\n          </p>\n          <div className=\"flex justify-center\">\n            <a\n              href={CV}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"inline-flex text-white bg-green-500 border-0 py-2 px-6 focus:outline-none hover:bg-green-600 rounded text-lg\"\n            >\n              View my CV\n            </a>\n            <a\n              href=\"#projects\"\n              className=\"ml-4 inline-flex text-gray-400 bg-gray-800 border-0 py-2 px-6 focus:outline-none hover:bg-gray-700 hover:text-white rounded text-lg\"\n            >\n              See My Past Work\n            </a>\n          </div>\n        </div>\n        <div className=\"flex flex-col items-center\">\n          <div className={spin ? \"rotate\" : \"noRotate\"}>\n            <div className={spin ? \"coin__front\" : \"coin__static\"}></div>\n            <div className=\"coin__edge\"></div>\n            <div className=\"coin__back\"></div>\n            {!spin && (\n              <div>\n                <Eyes />\n              </div>\n            )}\n          </div>\n          {spin && (\n            <button\n              onClick={stopSpin}\n              className=\"text-white w-1/2 bg-green-800 border-0 py-2 p-8 px-6 m-7 focus:outline-none hover:bg-green-600 rounded text-lg\"\n            >\n              Stop this 🤢\n            </button>\n          )}\n          {!spin && (\n            <button\n              onClick={startSpin}\n              className=\"text-white w-1/2 bg-green-800 border-0 py-2 p-8 px-6 m-7 focus:outline-none hover:bg-green-600 rounded text-lg is-worse\"\n            >\n              👀 ... This is worse\n            </button>\n          )}\n        </div>\n      </div>\n      <div>\n        <button\n          className=\"text-white bg-green-800 border-0 py-2 focus:outline-none hover:bg-green-600 rounded text-lg back-to-top-button\"\n          onClick={scrollToTop}\n        >\n          <ChevronDoubleUpIcon className=\"mx-auto inline-block w-10 mb-4\" />\n        </button>\n      </div>\n    </section>\n  );\n};\n\nexport default Landing;\n","export const projectManagment = [\n  { name: \"Asana\", rate: 4 },\n  { name: \"Git\", rate: 3.5 },\n  { name: \"Jira\", rate: 4 },\n  { name: \"Miro\", rate: 3 },\n];\n\nexport const tools = [\n  { name: \"AWS\", score: 50 },\n  { name: \"Hubspot\", score: 60 },\n  { name: \"Salesforce\", score: 60 },\n  { name: \"Terraform\", score: 40 },\n];\n\nexport const skills = [\n  { name: \"React\", score: 70 },\n  { name: \"Angular\", score: 40 },\n  { name: \"Python\", score: 70 },\n  { name: \"R\", score: 60 },\n  { name: \"Django\", score: 65 },\n  { name: \"SQL\", score: 60 },\n];\n","import React from \"react\";\n\nimport \"antd/dist/antd.css\";\nimport { Progress, Rate } from \"antd\";\n\nimport { BadgeCheckIcon, ChipIcon, LightningBoltIcon, LightBulbIcon } from \"@heroicons/react/solid\";\n\nimport { skills, projectManagment, tools } from \"./skillsList\";\n\nconst Skills = () => {\n  return (\n    <section id=\"skills\">\n      <div className=\"container px-5 py-10 mx-auto\">\n        <div className=\"text-center mb-20\">\n          <ChipIcon className=\"w-10 inline-block mb-4\" />\n          <h1 className=\"sm:text-4xl text-3xl font-medium title-font text-white mb-4\">\n            Skills &amp; Technologies\n          </h1>\n          <p className=\"text-base leading-relaxed xl:w-2/4 lg:w-3/4 mx-auto\">\n            Languages, frameworks, tools and software I use and continue to learn. These rating are not based off of any offical rating, they are based off my familiarity and comfort level with regards to using them. \n          </p>\n        </div>\n        <div className=\"flex flex-wrap lg:w-4/5 sm:mx-auto sm:mb-2 -mx-2\">\n          {skills.map((skill) => (\n            <div key={skill} className=\"p-2 sm:w-1/2 w-full\">\n              <div className=\"bg-gray-800 rounded flex p-4 h-full items-center pr-10\">\n                <BadgeCheckIcon className=\"text-green-400 w-6 h-6 flex-shrink-0 mr-4\" />\n                <span className=\"title-font font-medium text-white\">\n                  {skill.name}\n                </span>\n                <Progress\n                  strokeColor={{\n                    \"0%\": \"#108ee9\",\n                    \"100%\": \"#87d068\",\n                  }}\n                  className=\"w-2/3 ml-auto\"\n                  showInfo={false}\n                  percent={skill.score}\n                />\n              </div>\n            </div>\n          ))}\n        </div>\n        <br />\n        <br />\n        <div className=\"flex flex-wrap lg:w-4/5 sm:mx-auto sm:mb-2 -mx-2\">\n          {tools.map((tool) => (\n            <div key={tool} className=\"p-2 sm:w-1/2 w-full\">\n              <div className=\"bg-gray-800 rounded flex p-4 h-full items-center pr-10\">\n                <LightBulbIcon className=\"text-green-400 w-6 h-6 flex-shrink-0 mr-4\" />\n                <span className=\"title-font font-medium text-white\">\n                  {tool.name}\n                </span>\n                <Progress\n                  strokeColor={{\n                    \"0%\": \"#108ee9\",\n                    \"100%\": \"#87d068\",\n                  }}\n                  className=\"w-2/3 ml-auto\"\n                  showInfo={false}\n                  percent={tool.score}\n                />\n              </div>\n            </div>\n          ))}\n        </div>\n        <br />\n        <br />\n\n        <div className=\"text-center mb-20\">\n          <h3 className=\"sm:text-3xl text-2xl font-medium title-font text-white mb-4\">\n            Project Management Tools\n          </h3>\n          <p className=\"text-base leading-relaxed xl:w-2/4 lg:w-3/4 mx-auto\">\n            I enjoy an Agile approach to software development and making use of the software below has reinforced that ideal.\n          </p>\n        </div>\n        <div className=\"flex flex-wrap lg:w-4/5 sm:mx-auto sm:mb-2 -mx-2\">\n          {projectManagment.map((projectManager) => (\n            <div key={projectManager} className=\"p-2 sm:w-1/2 w-full\">\n              <div className=\"bg-gray-800 rounded flex p-4 h-full items-center\">\n                <LightningBoltIcon className=\"text-green-400 w-6 h-6 flex-shrink-0 mr-4\" />\n                <span className=\"title-font font-medium text-white\">\n                  {projectManager.name}\n                </span>\n                <Rate\n                  className=\"w-1/2 ml-auto text-green-400\"\n                  disabled\n                  allowHalf={true}\n                  defaultValue={projectManager.rate}\n                />\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Skills;\n","export default __webpack_public_path__ + \"static/media/memory_game.d17dded4.png\";","export default __webpack_public_path__ + \"static/media/missing_trees.1cc946d1.png\";","export default __webpack_public_path__ + \"static/media/crypto_signals.5b91eda0.jpg\";","export default __webpack_public_path__ + \"static/media/lucky_guess.1e9299f9.png\";","export default __webpack_public_path__ + \"static/media/asana.68a669ae.png\";","export default __webpack_public_path__ + \"static/media/dashboard.fdf491b4.png\";","import memoryGame from \"../../img/memory_game.png\";\nimport missingTree from \"../../img/missing_trees.png\";\nimport cryptoSignals from \"../../img/crypto_signals.jpg\";\nimport luckyGuess from \"../../img/lucky_guess.png\";\nimport asana from \"../../img/asana.png\";\nimport dashboard from \"../../img/dashboard.png\";\n\nexport const projects = [\n    {\n      title: \"Memory Game\",\n      subtitle: \"React\",\n      description:\n        \"A space themed memory game for 2 players. Players take turns flipping 2 cards and trying to remember matching pairs.\",\n      image: memoryGame,\n      link: \"https://github.com/Peter-Willmott/SpecnoTechAssessment\",\n      modal: 1\n    },\n    {\n      title: \"Missing Trees\",\n      subtitle: \"Django\",\n      description:\n        \"A custom endpoint that returns the latitude and longitude of all the missing tree locations found within an orchard.\",\n      image: missingTree,\n      link: \"https://github.com/Peter-Willmott/missing_trees_assignment\",\n      modal: 2\n    },\n    {\n      title: \"Text Prediction\",\n      subtitle: \"R\",\n      description:\n        \"An app that suggests several words that could be used to continue the sentence and gives the probability of a correct word.\",\n      image: luckyGuess,\n      link: \"https://rpubs.com/P_Willmott/460088\",\n      modal: 3\n    },\n    {\n      title: \"Crypto Signals Bot\",\n      subtitle: \"Javascript\",\n      description:\n        \"Created for Saxan Capital to quickly and visually identify promising crypto coin pairs based off popular technical indicators.\",\n      image: cryptoSignals,\n      link: \"https://www.accel.co.za/\",\n      modal: 4\n    },\n    {\n      title: \"Asana Lambda Update\",\n      subtitle: \"Django + Asana + AWS\",\n      description:\n        \"A custom endpoint of unprocessed uploads that is hit every 15 minutes by a lambda, causing an update of a pre-designed Asana board.\",\n      image: asana,\n      link: \"https://github.com/Peter-Willmott/asana-updater\",\n      modal: 5\n    },\n    {\n      title: \"Crypto Dashboard\",\n      subtitle: \"Python + Bootstrap\",\n      description:\n        \"Company and personal portfolio tracking dashboard for cryptocurrencies. Includes portfolio holdings, growth and latest crypto news.\",\n      image: dashboard,\n      link: \"https://github.com/Peter-Willmott/Saxan-Capital-Management\",\n      modal: 6\n    },\n  ];","export default __webpack_public_path__ + \"static/media/johnny.e2ce63c5.gif\";","export default __webpack_public_path__ + \"static/media/memory_game1.e53183c4.png\";","export default __webpack_public_path__ + \"static/media/memory_game2.b6b5805b.png\";","export default __webpack_public_path__ + \"static/media/memory_game3.cfc6b7f1.png\";","export default __webpack_public_path__ + \"static/media/missing_trees1.17d1f1a8.png\";","export default __webpack_public_path__ + \"static/media/missing_trees2.2809c69f.png\";","export default __webpack_public_path__ + \"static/media/missing_trees3.da1ec699.png\";","export default __webpack_public_path__ + \"static/media/crypto_signals1.32f361fd.jpg\";","export default __webpack_public_path__ + \"static/media/lucky_guess1.c2c235c6.png\";","export default __webpack_public_path__ + \"static/media/lucky_guess2.2a5975ba.png\";","export default __webpack_public_path__ + \"static/media/lucky_guess3.59f5255c.png\";","export default __webpack_public_path__ + \"static/media/asana1.fd1ed7c5.png\";","export default __webpack_public_path__ + \"static/media/asana2.e956c0d5.png\";","export default __webpack_public_path__ + \"static/media/dashboard1.95a57408.png\";","export default __webpack_public_path__ + \"static/media/dashboard2.ce76cb97.png\";","export default __webpack_public_path__ + \"static/media/dashboard3.bdde0360.png\";","import React from \"react\";\n\nimport { Modal, Carousel } from \"antd\";\n\nimport memoryGame from \"../../../img/memory_game.png\";\nimport memoryGame1 from \"../../../img/memory_game1.png\";\nimport memoryGame2 from \"../../../img/memory_game2.png\";\nimport memoryGame3 from \"../../../img/memory_game3.png\";\nimport missingTree from \"../../../img/missing_trees.png\";\nimport missingTree1 from \"../../../img/missing_trees1.png\";\nimport missingTree2 from \"../../../img/missing_trees2.png\";\nimport missingTree3 from \"../../../img/missing_trees3.png\";\nimport cryptoSignals from \"../../../img/crypto_signals.jpg\";\nimport cryptoSignals1 from \"../../../img/crypto_signals1.jpg\";\nimport luckyGuess from \"../../../img/lucky_guess.png\";\nimport luckyGuess1 from \"../../../img/lucky_guess1.png\";\nimport luckyGuess2 from \"../../../img/lucky_guess2.png\";\nimport luckyGuess3 from \"../../../img/lucky_guess3.png\";\nimport asana from \"../../../img/asana.png\";\nimport asana1 from \"../../../img/asana1.png\";\nimport asana2 from \"../../../img/asana2.png\";\nimport dashboard from \"../../../img/dashboard.png\";\nimport dashboard1 from \"../../../img/dashboard1.png\";\nimport dashboard2 from \"../../../img/dashboard2.png\";\nimport dashboard3 from \"../../../img/dashboard3.png\";\n\nimport \"./projectModals.scss\";\n\nconst ProjectModals = ({ visible, modalVisibility, modalSelect }) => {\n  const handleOk = () => {\n    modalVisibility(false);\n  };\n\n  const handleCancel = () => {\n    modalVisibility(false);\n  };\n\n  const footer = [\n    <button\n      className=\"text-white w-1/8 bg-green-800 border-2 border-green-800 py-2 p-8 px-6 m-1 focus:outline-none hover:bg-green-600 hover:border-green-600 rounded text-lg\"\n      onClick={handleCancel}\n    >\n      Return\n    </button>,\n\n    <button\n      className=\"text-white w-1/8 bg-white-200 py-2  px-6 m-1 focus:outline-none hover:bg-green-600 hover:border-green-600 border-2 border-green-500 rounded text-lg\"\n      href=\"https://github.com/Peter-Willmott?tab=repositories\"\n      onClick={handleOk}\n    >\n      View Github Repo\n    </button>,\n  ];\n\n  const width = \"80%\";\n\n  return (\n    <>\n      {modalSelect === 1 && (\n        <Modal\n          visible={visible}\n          title=\"Memory Game\"\n          onOk={handleOk}\n          onCancel={handleCancel}\n          footer={footer}\n          width={width}\n        >\n          <div className=\"flex sm:flex-col md:flex-row\">\n            <div className=\"md:w-1/2 md:h-1/2\">\n              <Carousel autoplay={true}>\n                <div>\n                  <img\n                    className=\"object-contain h-96 w-full\"\n                    src={memoryGame}\n                    alt=\"Memory Game\"\n                  />\n                </div>\n                <div>\n                  <img\n                    className=\"object-contain h-96 w-full\"\n                    src={memoryGame1}\n                    alt=\"Memory Game\"\n                  />\n                </div>\n                <div>\n                  <img\n                    className=\"object-contain h-96 w-full\"\n                    src={memoryGame2}\n                    alt=\"Memory Game\"\n                  />\n                </div>\n                <div>\n                  <img\n                    className=\"object-contain h-96 w-full\"\n                    src={memoryGame3}\n                    alt=\"Memory Game\"\n                  />\n                </div>\n              </Carousel>\n            </div>\n            <div className=\"md:w-1/2 pl-5\">\n              <strong>How it works:</strong>\n              <br /> Made with React and hosted on Github Pages this 2 player\n              game is a fun memory test. On loading the players can set a their\n              player names or go straight into the game with the defaults. The\n              players then take turns flipping 2 cards hoping for a match. The\n              cards are normal playing cards and to get a match the cards have\n              to be the same colour AND same value (e.g. 7 of Spades and 7 of\n              Clubs). When getting a match a short gif will play and that\n              players goes again. The game ends when all the cards are matched\n              or the players end the game. The player are taken to the scoring\n              page showing the final scores and ranking. Options to quit or play\n              again are available. <br /> <br />\n              <strong>Technical:</strong>\n              <br /> The deck is shuffled using a Fisher-Yates shuffle. To match\n              the cards I used the cards source path (e.g.\n              \"/SpecnoTechAssessment/static/media/2_of_diamonds.a51b192d.png\").\n              I split the string on '_' and used the first and last values from\n              the array. Matching value is simple, a direct comparrison. For the\n              suit I checked if the string included the substring \"clubs\" or\n              \"spades\" and if true set the suit to \"black\". If there was a match\n              the value of the \"matched\" key was set to \"true\". The matched\n              column was is created during the shuffle, along with a random id.\n            </div>\n          </div>\n        </Modal>\n      )}\n      {modalSelect === 2 && (\n        <Modal\n          visible={visible}\n          title=\"Missing Trees\"\n          onOk={handleOk}\n          onCancel={handleCancel}\n          footer={footer}\n          width={width}\n        >\n          <div className=\"flex sm:flex-col md:flex-row\">\n            <div className=\"md:w-1/2 md:h-1/2\">\n              <Carousel autoplay={true}>\n                <div>\n                  <img\n                    className=\"object-contain h-96 w-full\"\n                    src={missingTree}\n                    alt=\"Missing Tree\"\n                  />\n                </div>\n                <div>\n                  <img\n                    className=\"object-contain h-96 w-full\"\n                    src={missingTree1}\n                    alt=\"Missing Tree\"\n                  />\n                </div>\n                <div>\n                  <img\n                    className=\"object-contain h-96 w-full\"\n                    src={missingTree2}\n                    alt=\"Missing Tree\"\n                  />\n                </div>\n                <div>\n                  <img\n                    className=\"object-contain h-96 w-full\"\n                    src={missingTree3}\n                    alt=\"Missing Tree\"\n                  />\n                </div>\n              </Carousel>\n            </div>\n            <div className=\"md:w-1/2 pl-5\">\n              <strong>How it works:</strong>\n              <br /> An API (hosted on Heroku) that gets a list of gps locations\n              of missing trees for a given orchard id The API uses the\n              Aerobotics Developers API to get a specified orchard id and its\n              corresponding tree survey data. The missing tree locations in that\n              orchard are then calculated and returned.\n              <br />\n              <br />\n              <strong>Technical:</strong>\n              <br /> To calculate the position of the missing trees a pacman\n              like approach is used. The orchard (perimeter) and tree (lat/long\n              positions) datasets are fetched from the Aerobotics API The first\n              and second points in the orchard perimeter are used to calculate\n              the angle to vertical using trigonometry. This is used to find the\n              orientation of the tree rows. Individual, orchard aligned, searh\n              windows are created and aligned with the orchard orientation.\n              These look for a single tree. The size of the window is determined\n              by the average tree radius. Several conditions are checked and\n              certain actions taken: A tree was found in the search window -\n              Move the search window to the new found tree and reset the search\n              window. A tree was found but it has already been identified before\n              - Try the next search window. The search window meets the orchard\n              perimeter - Try the next search window. No tree was found within\n              the search window - Create a tree in the window Record its lat and\n              long Move search window to the newly created tree. The search\n              window is stuck with no valid moves - The window has search in all\n              4 direction but there are still valid trees in the orchard Move\n              search window to the nearest valid neighbour Once all trees have\n              been checked the recorded missing tree locations are returned.\n            </div>\n          </div>\n        </Modal>\n      )}\n      {modalSelect === 3 && (\n        <Modal\n          visible={visible}\n          title=\"Text Prediction\"\n          onOk={handleOk}\n          onCancel={handleCancel}\n          footer={footer}\n          width={width}\n        >\n          <div className=\"flex sm:flex-col md:flex-row\">\n            <div className=\"md:w-1/2 md:h-1/2\">\n              <Carousel autoplay={true}>\n                <div>\n                  <img\n                    className=\"object-contain h-96 w-full\"\n                    src={luckyGuess}\n                    alt=\"Lucky Guess\"\n                  />\n                </div>\n                <div>\n                  <img\n                    className=\"object-contain h-96 w-full\"\n                    src={luckyGuess1}\n                    alt=\"Lucky Guess\"\n                  />\n                </div>\n                <div>\n                  <img\n                    className=\"object-contain h-96 w-full\"\n                    src={luckyGuess2}\n                    alt=\"Lucky Guess\"\n                  />\n                </div>\n                <div>\n                  <img\n                    className=\"object-contain h-96 w-full\"\n                    src={luckyGuess3}\n                    alt=\"Lucky Guess\"\n                  />\n                </div>\n              </Carousel>\n            </div>\n            <div className=\"md:w-1/2 pl-5\">\n              <strong>How it works:</strong>\n              <br /> This is a prediction application run off of a shiny server.\n              The application uses text entered into the app to predict what the\n              next word could be.\n              <br />\n              <br />\n              <strong>Technical:</strong>\n              <br /> The sampled data had to be cleaned and tokenized before it\n              could be used in a model. This involved putting the data into a\n              corpus, removing profanity, numbers, symbols, white spaces and\n              other unwanted characters in the data, the data also had to be\n              converted to lower case for matching purposes. The cleaned data\n              was then tokenized to form individual words. Modelling the data\n              and preparing it for the application had several stages. Because\n              the chosen method of prediciting the next word relied on a\n              back-off model, in my case{\" \"}\n              <a\n                style={{ color: \"blue\" }}\n                href=\"https://en.wikipedia.org/wiki/Katz%27s_back-off_model\"\n              >\n                Katz back-off model\n              </a>\n              . In an effort to try make the predictions more accurate and fair\n              I implemented a smoothing technique. I chose{\" \"}\n              <a\n                style={{ color: \"blue\" }}\n                href=\"https://en.wikipedia.org/wiki/Good%E2%80%93Turing_frequency_estimation\"\n              >\n                Good-Turing{\" \"}\n              </a>{\" \"}\n              as it is very effective yet easy to implement. . By applying the\n              smoothing the resulting frequencies were better suited for the\n              final prediction. The Katz back-off model tried to match the\n              quadgrams (trigram + prediction) with the user input and if that\n              failed tried the trigrams and so on until if no match was found\n              the high probability and frequency unigrams were sugested. This\n              method worked well and provided good predicitve ability.\n            </div>\n          </div>\n        </Modal>\n      )}\n      {modalSelect === 4 && (\n        <Modal\n          visible={visible}\n          title=\"Crypto Signals\"\n          onOk={handleOk}\n          onCancel={handleCancel}\n          footer={footer}\n          width={width}\n        >\n          <div className=\"flex sm:flex-col md:flex-row\">\n            <div className=\"md:w-1/2 md:h-1/2\">\n              <Carousel autoplay={true}>\n                <div>\n                  <img\n                    className=\"object-contain h-96 w-full\"\n                    src={cryptoSignals}\n                    alt=\"Crypto Signals\"\n                  />\n                </div>\n                <div>\n                  <img\n                    className=\"object-contain h-96 w-full\"\n                    src={cryptoSignals1}\n                    alt=\"Crypto Signals\"\n                  />\n                </div>\n              </Carousel>\n            </div>\n            <div className=\"md:w-1/2 pl-5\">\n              <strong>How it works:</strong>\n              <br /> Provides performance metrics for 290 different crypto coin\n              pairs. For each pair the current price in dollars and the value\n              change in the last 24 hours are shown. A 5 minute and 1 hour time\n              period are used to indicate strong coin pairs based on popular\n              trading indicators in technical analysis. The idea is to\n              streamline the process of identifying potential short term trading\n              pairs by visually showing trends.\n              <br />\n              <br />\n              <strong>Technical:</strong>\n              <br /> Based off the{\" \"}\n              <a\n                style={{ color: \"blue\" }}\n                href=\"https://github.com/Haehnchen/crypto-trading-bot \"\n              >\n                crypto trading bot{\" \"}\n              </a>{\" \"}\n              by Daniel Espendiller on the request of Saxan Capital, the signals\n              dashboard was used and developed on the feedback of their trading\n              team. Looking for a so called 'Royal flush' where the coin pair\n              had positive signals for both the 5 minute and 1 hour timelines.\n              Pairs that satisfied this were then investigated further by the\n              traders, the purpose of the dashboard is to reduce the time and\n              effort of identifying currently upward trending coins. The signals\n              dashboard was hosted through Digital Ocean. Unable to share the\n              code due to a company policy.\n            </div>\n          </div>\n        </Modal>\n      )}\n      {modalSelect === 5 && (\n        <Modal\n          visible={visible}\n          title=\"Asana Updater\"\n          onOk={handleOk}\n          onCancel={handleCancel}\n          footer={footer}\n          width={width}\n        >\n          <div className=\"flex sm:flex-col md:flex-row\">\n            <div className=\"md:w-1/2 md:h-1/2\">\n              <Carousel autoplay={true}>\n                <div>\n                  <img\n                    className=\"object-contain h-96 w-full\"\n                    src={asana}\n                    alt=\"Asana\"\n                  />\n                </div>\n                <div>\n                  <img\n                    className=\"object-contain h-96 w-full\"\n                    src={asana1}\n                    alt=\"Asana\"\n                  />\n                </div>\n                <div>\n                  <img\n                    className=\"object-contain h-96 w-full\"\n                    src={asana2}\n                    alt=\"Asana\"\n                  />\n                </div>\n              </Carousel>\n            </div>\n            <div className=\"md:w-1/2 pl-5\">\n              <strong>How it works:</strong>\n              <br /> An Asana board showing the progress of unprocessed uploads\n              currently in the piprline. The board updates every 15 minutes,\n              giving the number of blocks uploaded and the number of blocks\n              processed. The board shows the due date for the uploads, the type\n              of upload and if the pipeline is currently on track.\n              <br />\n              <br />\n              <strong>Technical:</strong>\n              <br /> Made for the Aerobotics Data Operations team to help them\n              identify uploads that required attention. The board uses a custom\n              endpoint that collects and assimilates data from different\n              databases. The custom endpoint is called within a AWS Lambda that\n              runs every 15 minutes, the function uses the Asana endpoint and\n              the custom Asana board to update and populate the required fields.\n              The lambda is controlled with Terraform.\n            </div>\n          </div>\n        </Modal>\n      )}\n      {modalSelect === 6 && (\n        <Modal\n          visible={visible}\n          title=\"Crypto Dashboard\"\n          onOk={handleOk}\n          onCancel={handleCancel}\n          footer={footer}\n          width={width}\n        >\n          <div className=\"flex sm:flex-col md:flex-row\">\n            <div className=\"md:w-1/2 md:h-1/2\">\n              <Carousel autoplay={true}>\n                <div>\n                  <img\n                    className=\"object-contain h-96 w-full\"\n                    src={dashboard}\n                    alt=\"Dashboard\"\n                  />\n                </div>\n                <div>\n                  <img\n                    className=\"object-contain h-96 w-full\"\n                    src={dashboard1}\n                    alt=\"Dashboard\"\n                  />\n                </div>\n                <div>\n                  <img\n                    className=\"object-contain h-96 w-full\"\n                    src={dashboard2}\n                    alt=\"Dashboard\"\n                  />\n                </div>\n                <div>\n                  <img\n                    className=\"object-contain h-96 w-full\"\n                    src={dashboard3}\n                    alt=\"Dashboard\"\n                  />\n                </div>\n              </Carousel>\n            </div>\n            <div className=\"md:w-1/2 pl-5\">\n              <strong>How it works:</strong>\n              <br /> A dashboard that is used to minitor the performance and\n              current holdings of a crypto wallet. Connecting to a Binance\n              wallet the dashboard shows the wallets current value and\n              breakdown. Additional non-specific information like the latest\n              cypto news headlines are shown on the dashboard as well. The\n              performance section of the dashboard is used to monitor the daily,\n              weekly and monthly performace of the traded portfolio and is\n              updated once a day.\n              <br />\n              <br />\n              <strong>Technical:</strong>\n              <br /> The general design was based off{\" \"}\n              <a\n                style={{ color: \"blue\" }}\n                href=\"https://www.creative-tim.com/product/black-dashboard-pro-django\"\n              >\n                Creative Tim dashboards\n              </a>{\" \"}\n              and implemented for Saxan Capital. The project was setup with the\n              down the line plan of incorporating machine learning based off the\n              recorded performance of the portfolio. Current coin prices and\n              historical prices were sourced through the Binance API and the\n              crypto news was updated from{\" \"}\n              <a style={{ color: \"blue\" }} href=\"https://cryptopanic.com\">\n                CryptoPanic\n              </a>\n              . Unable to share the code due to a company policy.\n            </div>\n          </div>\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default ProjectModals;\n","import React, { useState, useLayoutEffect, useEffect } from \"react\";\n\nimport { projects } from \"./projectData\";\nimport { CodeIcon } from \"@heroicons/react/solid\";\n\nimport ContactModal from \"../contact/contact\";\n\nimport johnny from \"../../img/johnny.gif\";\n\nimport ProjectModal from \"./projectModals/projectModals\";\n\nimport \"./portfolio.scss\";\n\nconst Portfolio = () => {\n  const [scrollPosition, setPosition] = useState(0);\n  const [showJohn, setShowJohn] = useState(false);\n  const [showContactButton, setShowContactButton] = useState(false);\n  const [showModal, setShowModal] = useState(false);\n  const [showContactModal, setShowContactModal] = useState(false);\n  const [selectedModal, setSelectedShowModal] = useState(0);\n\n  const modalVisibility = (vis) => {\n    setShowModal(vis);\n  };\n\n  const modalContactVisibility = (vis) => {\n    setShowContactModal(vis);\n  };\n\n  const handleModal = (project) => {\n    setSelectedShowModal(project);\n    setShowModal(true);\n  };\n\n  useLayoutEffect(() => {\n    const updatePosition = () => {\n      setPosition(window.pageYOffset);\n    };\n    window.addEventListener(\"scroll\", updatePosition);\n    updatePosition();\n    return () => window.removeEventListener(\"scroll\", updatePosition);\n  }, []);\n\n  useEffect(() => {\n    if (scrollPosition >= 800) {\n      setShowJohn(true);\n    }\n  }, [scrollPosition]);\n\n  useEffect(() => {\n    if (showJohn) {\n      const timer = setTimeout(() => {\n        setShowJohn(false);\n        setShowContactButton(true);\n      }, 4000);\n      return () => clearTimeout(timer);\n    }\n  }, [showJohn]);\n\n  return (\n    <section id=\"projects\" className=\"text-gray-400 bg-gray-900 body-font\">\n      <div className=\"container px-5 py-10 mx-auto text-center lg:px-40\">\n        <div className=\"flex flex-col w-full mb-20\">\n          <CodeIcon className=\"mx-auto inline-block w-10 mb-4\" />\n          <h1 className=\"sm:text-4xl text-3xl font-medium title-font mb-4 text-white\">\n            Some Apps I've Built\n          </h1>\n          <p className=\"lg:w-2/3 mx-auto leading-relaxed text-base\">\n            A couple of personal and work projects I have enjoyed making. \n          </p>\n        </div>\n        <div className=\"flex flex-wrap -m-4\">\n          {projects.map((project) => (\n            <div className=\"sm:w-1/2 lg:w-1/3 md:w-1/2 w-100 p-3\">\n              <div className=\"flex relative\">\n                <img\n                  alt={project.image}\n                  className=\"absolute inset-0 w-full h-full object-fill object-center\"\n                  src={project.image}\n                />\n                <div className=\"px-2 py-2 relative z-10 w-full border-4 border-gray-800 bg-gray-900 opacity-0 hover:opacity-100\">\n                  <h2 className=\"tracking-widest text-sm title-font font-medium text-green-400 mb-1\">\n                    {project.subtitle}\n                  </h2>\n                  <h1 className=\"title-font text-lg font-medium text-white mb-3\">\n                    {project.title}\n                  </h1>\n                  <p className=\"leading-relaxed\">{project.description}</p>\n                  <button\n                    className=\"text-white w-1/2 bg-green-800 border-0 py-2 p-2 px-2 m-7 focus:outline-none hover:bg-green-600 rounded text-lg\"\n                    onClick={() => handleModal(project.modal)}\n                  >\n                    View\n                  </button>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n        <ProjectModal\n          visible={showModal}\n          modalVisibility={modalVisibility}\n          modalSelect={selectedModal}\n        />\n        {showJohn && !showContactButton && (\n          <div>\n            <img alt=\"Johnny\" className=\"johnny\" src={johnny} />\n          </div>\n        )}\n        {showContactButton && (\n          <div>\n            <button\n              className=\"text-white bg-green-800 border-0 py-2 p-2 px-2 m-7 focus:outline-none hover:bg-green-600 rounded text-lg contact-button\"\n              onClick={() => setShowContactModal(true)}\n            >\n              Contact Me\n            </button>\n            <ContactModal\n              visible={showContactModal}\n              modalVisibility={modalContactVisibility}\n            />\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default Portfolio;\n","import React from \"react\";\n\nimport Particles from \"react-tsparticles\";\n\nconst ParticlesWithProps = () => {\n  const particlesInit = (main) => {\n    console.log(main);\n  };\n\n  const particlesLoaded = (container) => {\n    console.log(container);\n  };\n  return (\n      <Particles\n        id=\"tsparticles\"\n        init={particlesInit}\n        loaded={particlesLoaded}\n        options={{\n          background: {\n            color: {\n              value: \"#000\",\n            },\n          },\n          fpsLimit: 60,\n          interactivity: {\n            events: {\n              onHover: {\n                enable: true,\n                mode: \"repulse\",\n              },\n              resize: true,\n            },\n            modes: {\n              bubble: {\n                distance: 400,\n                duration: 2,\n                opacity: 0.8,\n                size: 20,\n              },\n              push: {\n                quantity: 4,\n              },\n              repulse: {\n                distance: 200,\n                duration: 0.4,\n              },\n            },\n          },\n          particles: {\n            color: {\n              value: \"#fff\",\n            },\n            links: {\n              color: \"#fff\",\n              distance: 200,\n              enable: true,\n              opacity: 0.7,\n              width: 2,\n            },\n            move: {\n              enable: true,\n            },\n            number: {\n              density: {\n                enable: true,\n                value_area: 800,\n              },\n              value: 50,\n            },\n            opacity: {\n              value: 0.4,\n            },\n            shape: {\n              type: \"circle\",\n            },\n            size: {\n              random: false,\n              value: 5,\n            },\n          },\n        }}\n      />\n\n  );\n};\n\nexport default ParticlesWithProps;","import React from \"react\";\n\n// Import Components\nimport Navigation from \"./components/core/navigation\";\nimport Landing from \"./components/landing/landing\";\nimport Skills from \"./components/skills/skills\";\nimport Portfolio from \"./components/projects/portfolio\";\nimport Particles from \"./components/core/backgroundParticles\";\n\nconst App = () => {\n  return (\n    <main className=\"text-gray-400 bg-gray-900 body-font m-auto\">\n      <Navigation />\n      <Particles />\n      <div className=\"bg-gray-900 opacity-95 contentContainer\">\n      <Landing />\n      <Portfolio />\n      <Skills />\n      </div>\n    </main>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <BrowserRouter>\n      <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n\n\n\n\n\n"],"sourceRoot":""}